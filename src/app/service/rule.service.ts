import { Injectable } from '@angular/core';
import { Rule } from '../class/rules'
import { Observable, of } from 'rxjs';
import * as echarts from 'echarts';

@Injectable({
    providedIn: 'root'
})
export class RuleService {
    RULES: Rule[] = [{
        ruleName: 'rule30',
        timeValues: [
            [0.0, 0.0],
            [144.000000000014, 0.0],
            [144.000000000015, 0.0],
            [144.070000000015, 30.0],
            [144.070000000015, 30.0],
            [191.9999999999718, 30.0],
            [191.9999999999718, 30.0],
            [192.0699999999718, 0.0],
            [192.0699999999718, 0.0],
            [218.9999999999475, 0.0],
            [218.9999999999475, 0.0],
            [219.0699999999474, 30.0],
            [219.0699999999474, 30.0],
            [248.9999999999206, 30.0],
            [248.9999999999206, 30.0],
            [249.0699999999206, 0.0],
            [249.0699999999206, 0.0],
            [278.9999999998934, 0.0],
            [278.9999999998934, 0.0],
            [279.0699999998934, 30.0],
            [279.0699999998934, 30.0],
            [290.9999999998824, 30.0],
            [290.9999999998825, 30.0],
            [291.0699999998824, 0.0],
            [291.0699999998824, 0.0],
            [300.0099999998743, 0.0],
        ]

    },
    {
        ruleName: ' rule29 ',
        timeValues: [
            [0.0, 0.0],
            [185.9999999999772, 0.0],
            [185.9999999999772, 0.0],
            [186.0699999999772, 29.0],
            [186.0699999999772, 29.0],
            [215.9999999999502, 29.0],
            [215.9999999999502, 29.0],
            [216.0699999999501, 0.0],
            [216.0699999999501, 0.0],
            [245.9999999999233, 0.0],
            [245.9999999999233, 0.0],
            [246.0699999999233, 29.0],
            [246.0699999999233, 29.0],
            [281.9999999998906, 29.0],
            [281.9999999998907, 29.0],
            [282.0699999998906, 0.0],
            [282.0699999998906, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule28 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 28.0],
            [141.0700000000177, 28.0],
            [236.9999999999313, 28.0],
            [236.9999999999313, 28.0],
            [237.0699999999313, 0.0],
            [237.0699999999313, 0.0],
            [300.0099999998743, 0.0],
        ]
    },
    {
        ruleName: ' rule27 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 27.0],
            [141.0700000000177, 27.0],
            [290.9999999998824, 27.0],
            [290.9999999998825, 27.0],
            [291.0699999998824, 0.0],
            [291.0699999998824, 0.0],
            [300.0099999998743, 0.0],
        ]
    },
    {
        ruleName: ' rule26 ',
        timeValues: [

            [0.0, 0.0],
            [179.9999999999826, 0.0],
            [179.9999999999826, 0.0],
            [180.0699999999826, 26.0],
            [180.0699999999826, 26.0],
            [197.9999999999664, 26.0],
            [197.9999999999664, 26.0],
            [198.0699999999664, 0.0],
            [198.0699999999664, 0.0],
            [239.9999999999286, 0.0],
            [239.9999999999287, 0.0],
            [240.0699999999286, 26.0],
            [240.0699999999286, 26.0],
            [257.9999999999125, 26.0],
            [257.9999999999125, 26.0],
            [258.0699999999125, 0.0],
            [258.0699999999125, 0.0],
            [300.0099999998743, 0.0],
        ]
    },
    {
        ruleName: ' rule25 ',
        timeValues: [

            [0.0, 0.0],
            [2.999999999999978, 0.0],
            [3.0, 0.0],
            [3.069999999999999, 25.0],
            [3.069999999999999, 25.0],
            [141.0, 25.0],
            [141.0000000000177, 25.0],
            [141.0700000000177, 0.0],
            [141.0700000000177, 0.0],
            [287.9999999998852, 0.0],
            [287.9999999998852, 0.0],
            [288.0699999998852, 25.0],
            [288.0699999998852, 25.0],
            [300.0099999998743, 25.0],
        ]
    },
    {
        ruleName: ' rule24 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 24.0],
            [141.0700000000177, 24.0],
            [290.9999999998824, 24.0],
            [290.9999999998825, 24.0],
            [291.0699999998824, 0.0],
            [291.0699999998824, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule23 ',
        timeValues: [

            [0.0, 0.0],
            [2.999999999999978, 0.0],
            [3.0, 0.0],
            [3.069999999999999, 23.0],
            [3.069999999999999, 23.0],
            [141.0, 23.0],
            [141.0000000000177, 23.0],
            [141.0700000000177, 0.0],
            [141.0700000000177, 0.0],
            [290.9999999998824, 0.0],
            [290.9999999998825, 0.0],
            [291.0699999998824, 23.0],
            [291.0699999998824, 23.0],
            [300.0099999998743, 23.0],
        ]
    }, {
        ruleName: ' rule22 ',
        timeValues: [

            [0.0, 0.0],
            [5.999999999999913, 0.0],
            [5.999999999999956, 0.0],
            [6.069999999999954, 22.0],
            [6.069999999999954, 22.0],
            [144.000000000014, 22.0],
            [144.000000000015, 22.0],
            [144.070000000015, 0.0],
            [144.070000000015, 0.0],
            [287.9999999998852, 0.0],
            [287.9999999998852, 0.0],
            [288.0699999998852, 22.0],
            [288.0699999998852, 22.0],
            [300.0099999998743, 22.0],
        ]
    }, {
        ruleName: ' rule21 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 21.0],
            [141.0700000000177, 21.0],
            [290.9999999998824, 21.0],
            [290.9999999998825, 21.0],
            [291.0699999998824, 0.0],
            [291.0699999998824, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule20 ',
        timeValues: [

            [0.0, 0.0],
            [185.9999999999772, 0.0],
            [185.9999999999772, 0.0],
            [186.0699999999772, 20.0],
            [186.0699999999772, 20.0],
            [191.9999999999718, 20.0],
            [191.9999999999718, 20.0],
            [192.0699999999718, 0.0],
            [192.0699999999718, 0.0],
            [245.9999999999233, 0.0],
            [245.9999999999233, 0.0],
            [246.0699999999233, 20.0],
            [246.0699999999233, 20.0],
            [251.9999999999179, 20.0],
            [251.9999999999179, 20.0],
            [252.0699999999179, 0.0],
            [252.0699999999179, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule19 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 19.0],
            [141.0700000000177, 19.0],
            [159.0000000000015, 19.0],
            [159.0000000000015, 19.0],
            [159.0700000000015, 0.0],
            [159.0700000000015, 0.0],
            [215.9999999999502, 0.0],
            [215.9999999999502, 0.0],
            [216.0699999999501, 19.0],
            [216.0699999999501, 19.0],
            [221.9999999999448, 19.0],
            [221.9999999999448, 19.0],
            [222.0699999999447, 0.0],
            [222.0699999999447, 0.0],
            [275.9999999998961, 0.0],
            [275.9999999998961, 0.0],
            [276.0699999998961, 19.0],
            [276.0699999998961, 19.0],
            [281.9999999998906, 19.0],
            [281.9999999998907, 19.0],
            [282.0699999998906, 0.0],
            [282.0699999998906, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule18 ',
        timeValues: [

            [0.0, 0.0],
            [2.999999999999978, 0.0],
            [3.0, 0.0],
            [3.069999999999999, 18.0],
            [3.069999999999999, 18.0],
            [141.0, 18.0],
            [141.0000000000177, 18.0],
            [141.0700000000177, 0.0],
            [141.0700000000177, 0.0],
            [287.9999999998852, 0.0],
            [287.9999999998852, 0.0],
            [288.0699999998852, 18.0],
            [288.0699999998852, 18.0],
            [300.0099999998743, 18.0],
        ]
    }, {
        ruleName: ' rule17 ',
        timeValues: [

            [0.0, 0.0],
            [144.000000000014, 0.0],
            [144.000000000015, 0.0],
            [144.070000000015, 17.0],
            [144.070000000015, 17.0],
            [156.0000000000042, 17.0],
            [156.0000000000042, 17.0],
            [156.0700000000042, 0.0],
            [156.0700000000042, 0.0],
            [159.0000000000015, 0.0],
            [159.0000000000015, 0.0],
            [159.0700000000015, 17.0],
            [159.0700000000015, 17.0],
            [164.9999999999961, 17.0],
            [164.9999999999961, 17.0],
            [165.0699999999961, 0.0],
            [165.0699999999961, 0.0],
            [170.9999999999907, 0.0],
            [170.9999999999907, 0.0],
            [171.0699999999907, 17.0],
            [171.0699999999907, 17.0],
            [188.9999999999745, 17.0],
            [188.9999999999745, 17.0],
            [189.0699999999745, 0.0],
            [189.0699999999745, 0.0],
            [194.9999999999691, 0.0],
            [194.9999999999691, 0.0],
            [195.0699999999691, 17.0],
            [195.0699999999691, 17.0],
            [212.9999999999529, 17.0],
            [212.9999999999529, 17.0],
            [213.0699999999528, 0.0],
            [213.0699999999528, 0.0],
            [215.9999999999502, 0.0],
            [215.9999999999502, 0.0],
            [216.0699999999501, 17.0],
            [216.0699999999501, 17.0],
            [239.9999999999286, 17.0],
            [239.9999999999287, 17.0],
            [240.0699999999286, 0.0],
            [240.0699999999286, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule16 ',
        timeValues: [

            [0.0, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule15 ',
        timeValues: [

            [0.0, 0.0],
            [2.999999999999978, 0.0],
            [3.0, 0.0],
            [3.069999999999999, 15.0],
            [3.069999999999999, 15.0],
            [141.0, 15.0],
            [141.0000000000177, 15.0],
            [141.0700000000177, 0.0],
            [141.0700000000177, 0.0],
            [287.9999999998852, 0.0],
            [287.9999999998852, 0.0],
            [288.0699999998852, 15.0],
            [288.0699999998852, 15.0],
            [300.0099999998743, 15.0],
        ]
    }, {
        ruleName: ' rule14 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 14.0],
            [141.0700000000177, 14.0],
            [153.0000000000069, 14.0],
            [153.0000000000069, 14.0],
            [153.0700000000069, 0.0],
            [153.0700000000069, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule13 ',
        timeValues: [

            [0.0, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule12 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 12.0],
            [141.0700000000177, 12.0],
            [290.9999999998824, 12.0],
            [290.9999999998825, 12.0],
            [291.0699999998824, 0.0],
            [291.0699999998824, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule11 ',
        timeValues: [

            [0.0, 0.0],
            [5.999999999999913, 0.0],
            [5.999999999999956, 0.0],
            [6.069999999999954, 11.0],
            [6.069999999999954, 11.0],
            [144.000000000014, 11.0],
            [144.000000000015, 11.0],
            [144.070000000015, 0.0],
            [144.070000000015, 0.0],
            [287.9999999998852, 0.0],
            [287.9999999998852, 0.0],
            [288.0699999998852, 11.0],
            [288.0699999998852, 11.0],
            [300.0099999998743, 11.0],
        ]
    }, {
        ruleName: ' rule10 ',
        timeValues: [

            [0.0, 0.0],
            [173.9999999999849, 0.0],
            [173.999999999988, 0.0],
            [174.069999999988, 10.0],
            [174.069999999988, 10.0],
            [203.999999999961, 10.0],
            [203.999999999961, 10.0],
            [204.0699999999609, 0.0],
            [204.0699999999609, 0.0],
            [233.999999999934, 0.0],
            [233.999999999934, 0.0],
            [234.0699999999339, 10.0],
            [234.0699999999339, 10.0],
            [263.9999999998977, 10.0],
            [263.9999999999071, 10.0],
            [264.069999999907, 0.0],
            [264.069999999907, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule9 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 9.0],
            [141.0700000000177, 9.0],
            [147.0000000000123, 9.0],
            [147.0000000000123, 9.0],
            [147.0700000000123, 0.0],
            [147.0700000000123, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule8 ',
        timeValues: [

            [0.0, 0.0],
            [173.9999999999849, 0.0],
            [173.999999999988, 0.0],
            [174.069999999988, 8.0],
            [174.069999999988, 8.0],
            [201.9999999999577, 8.0],
            [201.9999999999628, 8.0],
            [202.0699999999627, 0.0],
            [202.0699999999627, 0.0],
            [231.9999999999285, 0.0],
            [231.9999999999358, 0.0],
            [232.0699999999357, 8.0],
            [232.0699999999357, 8.0],
            [266.9999999999043, 8.0],
            [266.9999999999043, 8.0],
            [267.0699999999043, 0.0],
            [267.0699999999043, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule7 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 7.0],
            [141.0700000000177, 7.0],
            [164.9999999999961, 7.0],
            [164.9999999999961, 7.0],
            [165.0699999999961, 0.0],
            [165.0699999999961, 0.0],
            [209.9999999999556, 0.0],
            [209.9999999999556, 0.0],
            [210.0699999999555, 7.0],
            [210.0699999999555, 7.0],
            [227.9999999999394, 7.0],
            [227.9999999999394, 7.0],
            [228.0699999999393, 0.0],
            [228.0699999999393, 0.0],
            [269.9999999999015, 0.0],
            [269.9999999999016, 0.0],
            [270.0699999999015, 7.0],
            [270.0699999999015, 7.0],
            [287.9999999998852, 7.0],
            [287.9999999998852, 7.0],
            [288.0699999998852, 0.0],
            [288.0699999998852, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule6 ',
        timeValues: [

            [0.0, 0.0],
            [179.9999999999826, 0.0],
            [179.9999999999826, 0.0],
            [180.0699999999826, 6.0],
            [180.0699999999826, 6.0],
            [197.9999999999664, 6.0],
            [197.9999999999664, 6.0],
            [198.0699999999664, 0.0],
            [198.0699999999664, 0.0],
            [239.9999999999286, 0.0],
            [239.9999999999287, 0.0],
            [240.0699999999286, 6.0],
            [240.0699999999286, 6.0],
            [257.9999999999125, 6.0],
            [257.9999999999125, 6.0],
            [258.0699999999125, 0.0],
            [258.0699999999125, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule5 ',
        timeValues: [

            [0.0, 0.0],
            [173.9999999999849, 0.0],
            [173.999999999988, 0.0],
            [174.069999999988, 5.0],
            [174.069999999988, 5.0],
            [293.9999999998684, 5.0],
            [293.9999999998798, 5.0],
            [294.0699999998797, 0.0],
            [294.0699999998797, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule4 ',
        timeValues: [

            [0.0, 0.0],
            [173.9999999999849, 0.0],
            [173.999999999988, 0.0],
            [174.069999999988, 4.0],
            [174.069999999988, 4.0],
            [287.9999999998852, 4.0],
            [287.9999999998852, 4.0],
            [288.0699999998852, 0.0],
            [288.0699999998852, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule3 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 3.0],
            [141.0700000000177, 3.0],
            [147.0000000000123, 3.0],
            [147.0000000000123, 3.0],
            [147.0700000000123, 0.0],
            [147.0700000000123, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule2 ',
        timeValues: [

            [0.0, 0.0],
            [185.9999999999772, 0.0],
            [185.9999999999772, 0.0],
            [186.0699999999772, 2.0],
            [186.0699999999772, 2.0],
            [191.9999999999718, 2.0],
            [191.9999999999718, 2.0],
            [192.0699999999718, 0.0],
            [192.0699999999718, 0.0],
            [245.9999999999233, 0.0],
            [245.9999999999233, 0.0],
            [246.0699999999233, 2.0],
            [246.0699999999233, 2.0],
            [251.9999999999179, 2.0],
            [251.9999999999179, 2.0],
            [252.0699999999179, 0.0],
            [252.0699999999179, 0.0],
            [300.0099999998743, 0.0],
        ]
    }, {
        ruleName: ' rule1 ',
        timeValues: [

            [0.0, 0.0],
            [141.0, 0.0],
            [141.0000000000177, 0.0],
            [141.0700000000177, 1.0],
            [141.0700000000177, 1.0],
            [153.0000000000069, 1.0],
            [153.0000000000069, 1.0],
            [153.0700000000069, 0.0],
            [153.0700000000069, 0.0],
            [300.0099999998743, 0.0],
        ]
    }
    ];
    constructor() { }

    getRules() {
        return new Observable((observer) => {
            setTimeout(() => {
                var rules :Rule[]= [];
                for(let i=this.RULES.length-1;i>=0;i--){
                    rules.push(this.RULES[i]);
                }
                observer.next(rules);
            }, 500)
        })
    }

    getRulesEchartsOption() {
        return new Observable((observer) => {
            setTimeout(() => {
                var rules :Rule[]= [];
                for(let i=this.RULES.length-1;i>=0;i--){
                    rules.push(this.RULES[i]);
                }
                var length = rules.length;
                var data = [];
                var categories = [];
                var colors = [];


                for (let i = 0; i < length; i++) {
                    categories.push(rules[i].ruleName);
                    colors.push('rgb(' + [
                        Math.round(Math.random() * 255),
                        Math.round(Math.random() * 255),
                        Math.round(Math.random() * 255)
                    ].join(',') + ')');
                }

                for (let i = 0; i < length; i++) {
                    
                    var len = rules[i].timeValues.length;
                    
                    var startTime = 0;
                    var endTime = 0;

                    for (let j = 0; j < len;) {
                        if (j < len - 1) {
                            if (rules[i].timeValues[j][1] > 0) {
                                var k = j + 1;
                                for (; k < len;) {
                                    if (!(rules[i].timeValues[k][1] > 0)) {
                                        startTime = rules[i].timeValues[j][0];
                                        endTime = rules[i].timeValues[k - 1][0];
                                        data.push(
                                            {
                                                name: rules[i].ruleName,
                                                value: [
                                                    i,
                                                    startTime,
                                                    endTime,
                                                    endTime - startTime
                                                ],
                                                itemStyle: {
                                                    normal: {
                                                        color: colors[i]
                                                    }
                                                }
                                            }
                                        );

                                        
                                        break;
                                    } else {
                                        k++;
                                    }
                                }
                                j = k;
                            } else {
                                j++;
                                
                            }

                        } else {
                            if (rules[i].timeValues[j][1] > 0) {
                                startTime = rules[i].timeValues[j][0];
                                endTime = rules[i].timeValues[j][0];
                                data.push(
                                    {
                                        name: rules[i].ruleName,
                                        value: [
                                            i,
                                            startTime,
                                            endTime,
                                            endTime - startTime
                                        ],
                                        // itemStyle:{
                                        //     normal:{
                                        //         color:
                                        //     }
                                        // }
                                    }
                                )

                            }
                            j++;
                        }


                    }
                }
                function renderItem(params: { coordSys: { x: any; y: any; width: any; height: any; }; }, api: { value: (arg0: number) => any; coord: (arg0: any[]) => any; size: (arg0: number[]) => number[]; style: () => any; }) {
                    var categoryIndex = api.value(0);
                    var start = api.coord([api.value(1), categoryIndex]);
                    var end = api.coord([api.value(2), categoryIndex]);
                    var height = api.size([0, 1])[1] * 0.5;
                    const ec = echarts as any;
                    var rectShape = echarts.graphic.clipRectByRect({
                        x: start[0],
                        y: start[1] - height / 2,
                        width: end[0] - start[0],
                        height: height
                    }, {
                        x: params.coordSys.x,
                        y: params.coordSys.y,
                        width: params.coordSys.width,
                        height: params.coordSys.height
                    });

                    return rectShape && {
                        type: 'rect',
                        shape: rectShape,
                        style: api.style()
                    };
                }


                var options = {
                    tooltip: {
                        formatter: function (params: any) {
                            return params.marker +  params.name + ' last time : <br/>' + params.value[3];
                        }
                    },
                    title: {
                        text: 'Rules Trigger Time',
                        left: 'center'
                    },
                    dataZoom: [{
                        type: 'inside',
                        filterMode: 'none',
                        showDataShadow: false,
                        top: 400,
                        height: 30,
                        borderColor: 'transparent',
                        backgroundColor: '#e2e2e2',
                        handleIcon: 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line
                        handleSize: 20,
                        handleStyle: {
                            shadowBlur: 6,
                            shadowOffsetX: 1,
                            shadowOffsetY: 2,
                            shadowColor: '#aaa'
                        },
                        labelFormatter: ''
                    }, {
                        type: 'inside',
                        filterMode: 'weakFilter'
                    }],
                    grid: {
                        height: 300
                    },
                    xAxis: {
                        show: true,
                        min: 0,
                        scale: true,
                        axisLabel: {
                            formatter: function (val: number) {
                                return Math.max(0, val - 0);
                            }
                        }
                    },
                    yAxis: {
                        data: categories
                    },
                    series: [{
                        type: 'custom',
                        renderItem: renderItem,
                        itemStyle: {
                            opacity: 0.7
                        },
                        encode: {
                            x: [1, 2],
                            y: 0
                        },
                        data: data
                    }]
                };

                observer.next(options);
            })
        })
    }

    getRulesPieOption(){
        return new Observable((observer)=>{
            setTimeout(()=>{
                var rules=this.RULES;
                
            })
        })
    }
}
